'''
Created on Nov 16, 2022

@author: vivi
'''

from operator import itemgetter

import pandas as pd
import random

import numpy as np

import matplotlib
import matplotlib.pyplot as plt
import matplotlib.patches as patches

from matplotlib import cm
from matplotlib.colors import LightSource

from sklearn.manifold import TSNE
from sklearn.decomposition import PCA

import seaborn as sns

#colours = list(matplotlib.colors.TABLEAU_COLORS.keys())
colours = list(matplotlib.colors.CSS4_COLORS.keys())


def plot_fill(results_list,plot_names,x_axis,y_axis,title,file_name):
    fig, ax = plt.subplots()
    k = 0
    for results in results_list:
        x = list(results.keys())
        mins = []
        maxs = []
        avgs = []
        for i in x:
            mins.append(min(results[i]))
            maxs.append(max(results[i]))
            avgs.append(sum(results[i])/len(results[i]))
        
        c = colours[k]    
        ax.plot(x, avgs, '-')
        ax.fill_between(x, mins, maxs, alpha=0.2)
        ax.plot(x, avgs, 'o', color=c, label=plot_names[k])
        k += 1
    ax.set_title(title)
    ax.set_xlabel(x_axis)
    ax.set_ylabel(y_axis)
    ax.legend()
    
    plt.show()
    plt.savefig(file_name)



def plot_ordered_patterns(df, ordered_cases):

    #print("data frame for {} {} =>\n{}\n".format(g, nr, df))
    max_df = df[ordered_cases].max(axis=1).max(axis=0)
    min_df = df[ordered_cases].min(axis=1).min(axis=0)
    heatmap = sns.heatmap(df, cmap="YlOrBr", fmt="g", linewidth=0.5, annot=True, center=(max_df-min_df)/2)
    plt.show()


def plot_X_test(results,plot_name,x_axis,y_axis,title,file_name):

    avgs = {}
    for train_on in results.keys():
        avgs[train_on] = {}
        for test_on in results[train_on].keys():
            avgs[train_on][test_on] = sum(results[train_on][test_on])/len(results[train_on][test_on])

    results_df = pd.DataFrame.from_dict(avgs)
    #results_heatmap = sns.heatmap(results_df, cmap="YlOrBr", fmt="g", linewidth=0.5, annot=True)
    results_heatmap = sns.heatmap(results_df, cmap="Blues", fmt="g", linewidth=0.5, annot=True)
    results_heatmap.set(xlabel="Train on", ylabel="Test on")
    
    plt.show()
    plt.savefig(file_name)
    print("figure saved to {}".format(file_name))
    
    
def get_coordinates(model, vectors):
    projections = model.fit_transform(vectors)
    return [projections[i][0] for i in range(len(vectors))], [projections[i][1] for i in range(len(vectors))]

    
## data_type can be "train" or "test"
def plot_latent_2d(latent_vecs, patterns, data_type):

    unique_patterns = sorted(list(set(patterns)))
    colors = dict(zip(unique_patterns, cm.rainbow(np.linspace(0, 1, len(unique_patterns))) ))
    #print("Unique patterns: {}".format(unique_patterns))
    #print("Colours: {}".format(colors))
    #print("Patterns: {}".format(patterns))
    vec_colours = [colors[p] for p in patterns]

    tsne_X, tsne_Y = get_coordinates(TSNE(n_components=2, random_state=0), latent_vecs)
    pca_X, pca_Y = get_coordinates(PCA(n_components=2), latent_vecs)
    
    fig,(axs_tsne, axs_pca) = plt.subplots(ncols=2, figsize=(10,4))

    axs_tsne.scatter(tsne_X, tsne_Y, c=vec_colours, alpha=0.5)
    axs_tsne.set_title("TSNE projection")
    
    axs_pca.scatter(pca_X, pca_Y, c=vec_colours, alpha=0.5)
    axs_pca.set_title("PCA projection")
    
    labels_legend = list(colors.keys())
    color_patches = [patches.Patch(facecolor=colors[l]) for l in labels_legend]
    fig.legend(handles = color_patches, labels=labels_legend, loc = 'lower right')
    plt.suptitle("Projections of the latent layer from the {} data".format(data_type))
    plt.show()

    

    

def plot_latent_values(latent_values, x_axis, y_axis, title, file_name, N):
    d_types = list(latent_values.keys())
    datasets = list(latent_values[d_types[0]].keys())   ## this should be ["train", "test"]
    
    print("Making a {} x {} plot".format(len(d_types), len(datasets)))
    
    fig, axs = plt.subplots(len(d_types), len(datasets))

    #plt.xlabel(x_axis)
    #plt.ylabel(y_axis)
    plt.title(title)
        
    for i in range(len(d_types)):
        d_type = d_types[i]
        for j in range(len(datasets)):
            d = datasets[j]
            
            print("latent values ({},{}): \n{}".format(d_type, d, latent_values[d_type][d]))
            data = sorted(latent_values[d_type][d], key=itemgetter(0))
            print("\nsorted data: \n{}".format(data))

            N = min(N, len(data))

            for k in range(len(data[0])):
                y = [data[n][k] for n in range(len(data))]
                y = random.sample(y,N)
                axs[i,j].plot(y, '-', color = colours[k], label = d_type + "_" + d + "_" + str(k))    
                
            #axs[i,j].legend()
            #axs[i,j].set_xlabel(x_axis)
            axs[i,j].set_ylabel(y_axis)
            axs[i,j].set_title(d_type + " " + d)
        
    plt.show()
    plt.savefig(file_name + ".png")



def plot_latent_values_separately(latent_values, x_axis, y_axis, title, file_name, N):
    d_types = list(latent_values.keys())
    datasets = list(latent_values[d_types[0]].keys())   ## this should be ["train", "test"]
    len_latent = len(latent_values[d_types[0]][datasets[0]][0])
                
    for i in range(len(d_types)):
        d_type = d_types[i]
        
        print("Making a {} x {} plot".format(len(d_types) * len_latent, len(datasets)))
    
        fig, axs = plt.subplots(len_latent, len(datasets))

        #plt.xlabel(x_axis)
        #plt.ylabel(y_axis)
        plt.title(title + " " + d_type)
        
        for j in range(len(datasets)):
            d = datasets[j]

            #print("latent values ({},{}): \n{}".format(d_type, d, latent_values[d_type][d]))
            data = sorted(latent_values[d_type][d], key=itemgetter(0))
            #data = latent_values[d_type][d]
            #print("\nsorted data: \n{}".format(data))
            N = min(N, len(data))
            
            x = list(range(N))
        
            for k in range(len_latent):
                #y = [data[n][k] for n in range(len(data))]
                #y = random.sample(y,N)
                y = [data[n][k] for n in range(N)]

                #axs[k,j].scatter(x, y, s=1, color=colours[k])  #, 'o', color = colours[k], label = d_type + "_" + d + "_" + str(k))    
                axs[k,j].scatter(x, y, s=1, color='tab:orange')
                
                #axs[i,j].legend()
                #axs[i,j].set_xlabel(x_axis)
                #axs[i*len_latent+k,j].set_ylabel(y_axis)
                axs[k,j].set_title(d + " lat-" + str(k))
                axs[k,j].label_outer()
        
        plt.show()
        plt.savefig(file_name + "_" + d_type + ".png")



def plot_latent_values_histograms(latent_values, title, file_name):
 
    d_types = list(latent_values.keys())
    datasets = list(latent_values[d_types[0]].keys())   ## this should be ["train", "test"]
    len_latent = len(latent_values[d_types[0]][datasets[0]][0])
                
    for i in range(len(d_types)):
        d_type = d_types[i]
        
        print("Making a {} x {} plot".format(len(d_types) * len_latent, len(datasets)))
    
        fig, axs = plt.subplots(len_latent, len(datasets))

        #plt.xlabel(x_axis)
        #plt.ylabel(y_axis)
        plt.title(title + " " + d_type)
        
        for j in range(len(datasets)):
            d = datasets[j]

            #print("latent values ({},{}): \n{}".format(d_type, d, latent_values[d_type][d]))
            #data = sorted(latent_values[d_type][d], key=itemgetter(0))
            data = latent_values[d_type][d]   
        
            for k in range(len_latent):
                y = [data[n][k] for n in range(len(data))]
                y = sorted(y)
                
                axs[k,j].hist(y, density=True, bins=50, alpha=0.5, color = colours[k])  #, 'o', color = colours[k], label = d_type + "_" + d + "_" + str(k))    
                
                #axs[i,j].legend()
                #axs[i,j].set_xlabel(x_axis)
                #axs[i*len_latent+k,j].set_ylabel(y_axis)
                axs[k,j].set_title(d + " lat-" + str(k))
                axs[k,j].label_outer()
        
        plt.show()
        plt.savefig(file_name + "_" + d_type + ".png")    
        




def plot_3d(results, transformer, x_axis, y_axis, z_axis, title, filename):
    
    x = []
    y = []
    z = []
    
    for beta in results:
        x_i = []
        y_i = []
        z_i = []
        for latent in results[beta]:
            x_i.append(beta)
            y_i.append(latent)
            z_i.append(sum(results[beta][latent])/len(results[beta][latent]))
        x.append(x_i)
        y.append(y_i)
        z.append(z_i)
        
    x = np.array(x)
    y = np.array(y)
    z = np.array(z)
            
    # Set up plot
    fig, ax = plt.subplots(subplot_kw=dict(projection='3d'))

    print("x = {}".format(x))
    print("y = {}".format(y))
    print("z = {}".format(z))

    ls = LightSource(270, 45)
    # To use a custom hillshading mode, override the built-in shading and pass
    # in the rgb colors of the shaded surface calculated from "shade".
    rgb = ls.shade(z, cmap=cm.gist_earth, vert_exag=0.1, blend_mode='soft')
    surf = ax.plot_surface(x, y, z, rstride=1, cstride=1, facecolors=rgb,
                           linewidth=0, antialiased=False, shade=False)
    
    plt.show()
    plt.savefig(filename)        
    


## plot the filters for the VAE and dual_VAE's encoder -- they have one convolutional layer
def plot_filters(model):
    
    filters = model.encoder.conv1.weight.squeeze()
    # the shape of these filters most probably is [32, 1, 3, 15, 15] and after the squeeze [32, 3, 15, 15]
    
    n_rows = filters.shape[1]
    n_cols = filters.shape[0]
    
    fig, axs = plt.subplots(nrows = n_rows, ncols = n_cols)
    for i in range(n_cols):
        for j in range(n_rows):
            sns.heatmap(filters[i][j].cpu().detach().numpy(), ax=axs[j][i], cmap="vlag")
    
    plt.title(model.getinfo())
    plt.show()
    


def main():
    
    '''
    results_bert = {12: [0.6363, 0.6494,  0.6753],
                   11: [0.632,  0.6234,  0.6363],
                   10: [0.658,  0.658,   0.6623],
                   9:  [0.6407, 0.6147,  0.632],
                   8:  [0.5974, 0.5801,  0.5801],
                   7:  [0.632,  0.6623,  0.6537],
                   6:  [0.5844, 0.5541,  0.5887],
                   5:  [0.6017, 0.5931,  0.5931],
                   4:  [0.4762, 0.5065,  0.5022],
                   3:  [0.619,  0.6363,  0.632],
                   2:  [0.6234, 0.5281,  0.5584],
                   1:  [0.4848, 0.5109,  0.4545]}        

    results_flaubert = {
            12: [0.342],
            11: [0.3377],
            10: [0.3203],
            9:  [0.316],
            8:  [0.2641],
            7:  [0.329],
            6:  [0.2814],
            5:  [0.2641],
            4:  [0.2165],
            3:  [0.2294],
            2:  [0.3377],
            1:  [0.5584]}
    '''


#    results_bert = {0: [0.45887445887445877, 0.37229437229437223, 0.3463203463203462, 0.38528138528138517, 0.37229437229437223], 1: [0.5584415584415583, 0.5324675324675323, 0.606060606060606, 0.6277056277056275, 0.6103896103896103], 2: [0.632034632034632, 0.6233766233766233, 0.5974025974025973, 0.606060606060606, 0.567099567099567], 3: [0.4675324675324674, 0.41125541125541115, 0.41125541125541115, 0.41125541125541115, 0.4458874458874458], 4: [0.5974025974025973, 0.6406926406926405, 0.6277056277056275, 0.6147186147186146, 0.6233766233766233], 5: [0.5757575757575757, 0.5974025974025973, 0.5974025974025973, 0.606060606060606, 0.5757575757575757], 6: [0.6709956709956709, 0.6580086580086579, 0.6363636363636362, 0.6580086580086579, 0.6536796536796535], 7: [0.619047619047619, 0.619047619047619, 0.606060606060606, 0.5887445887445887, 0.6233766233766233], 8: [0.6450216450216449, 0.6883116883116882, 0.6406926406926405, 0.6363636363636362, 0.6493506493506492], 9: [0.6666666666666665, 0.6580086580086579, 0.6666666666666665, 0.6839826839826839, 0.6753246753246752], 10: [0.606060606060606, 0.6536796536796535, 0.619047619047619, 0.606060606060606, 0.5887445887445887], 11: [0.6450216450216449, 0.6363636363636362, 0.6536796536796535, 0.6493506493506492, 0.6493506493506492]}
#    results_flaubert = {0: [0.6969696969696969, 0.7359307359307358, 0.6839826839826839], 1: [0.6493506493506492, 0.6450216450216449, 0.5757575757575757], 2: [0.2857142857142856, 0.31168831168831157, 0.3030303030303029], 3: [0.2813852813852813, 0.27705627705627695, 0.2857142857142856], 4: [0.2597402597402596, 0.2683982683982683, 0.2727272727272726], 5: [0.36363636363636354, 0.3549783549783549, 0.3073593073593072], 6: [0.41125541125541115, 0.4199134199134198, 0.43722943722943713], 7: [0.3593073593073592, 0.3809523809523808, 0.37662337662337647], 8: [0.38528138528138517, 0.39826839826839816, 0.40259740259740245], 9: [0.38528138528138517, 0.3463203463203462, 0.33766233766233755], 10: [0.4155844155844155, 0.4675324675324674, 0.43722943722943713], 11: [0.49783549783549774, 0.47619047619047605, 0.48917748917748904]}
    results_bert_corrected_attn_mat = {0: [0.5584415584415583, 0.541125541125541, 0.5238095238095237], 
                                       1: [0.619047619047619, 0.5714285714285713, 0.593073593073593], 
                                       2: [0.5194805194805193, 0.4675324675324674, 0.5064935064935063], 
                                       3: [0.4675324675324674, 0.4632034632034631, 0.48917748917748904], 
                                       4: [0.6103896103896103, 0.6363636363636362, 0.6536796536796535], 
                                       5: [0.502164502164502, 0.48917748917748904, 0.5238095238095237], 
                                       6: [0.6147186147186146, 0.567099567099567, 0.593073593073593], 
                                       7: [0.6103896103896103, 0.567099567099567, 0.5974025974025973], 
                                       8: [0.6709956709956709, 0.6839826839826839, 0.6969696969696969], 
                                       9: [0.6450216450216449, 0.6450216450216449, 0.6493506493506492], 
                                       10: [0.6147186147186146, 0.6666666666666665, 0.6709956709956709], 
                                       11: [0.5627705627705627, 0.6406926406926405, 0.6406926406926405]}
    
    results_flaubert_corrected_attn_mat = {0: [0.5974025974025973, 0.5887445887445887, 0.606060606060606], 1: [0.6450216450216449, 0.7272727272727272, 0.7099567099567099], 2: [0.7142857142857142, 0.6796536796536795, 0.7142857142857142], 3: [0.5497835497835497, 0.48484848484848475, 0.48917748917748904], 4: [0.554112554112554, 0.5108225108225107, 0.528138528138528], 5: [0.6017316017316017, 0.5367965367965367, 0.541125541125541], 6: [0.5108225108225107, 0.4935064935064934, 0.5324675324675323], 7: [0.3549783549783549, 0.4199134199134198, 0.4199134199134198], 8: [0.515151515151515, 0.5064935064935063, 0.4632034632034631], 9: [0.47186147186147176, 0.35064935064935054, 0.3333333333333332], 10: [0.42857142857142844, 0.41125541125541115, 0.43722943722943713], 11: [0.4935064935064934, 0.42857142857142844, 0.3939393939393938]}

    results_flaubert_beta_corrected_attn_mat_attn_lev2 = {0: [0.7792207792207791, 0.8008658008658007, 0.8008658008658007], 1: [0.6796536796536795, 0.6839826839826839, 0.7012987012987012], 2: [0.47186147186147176, 0.5108225108225107, 0.48917748917748904], 3: [0.3549783549783549, 0.3549783549783549, 0.35064935064935054], 4: [0.3030303030303029, 0.2987012987012986, 0.2943722943722943], 5: [0.23376623376623365, 0.23809523809523797, 0.26406926406926395], 6: [0.225108225108225, 0.2077922077922077, 0.21645021645021634], 7: [0.2077922077922077, 0.22943722943722933, 0.2077922077922077], 8: [0.2077922077922077, 0.19913419913419902, 0.20346320346320335], 9: [0.225108225108225, 0.19913419913419902, 0.19913419913419902], 10: [0.20346320346320335, 0.21212121212121204, 0.2077922077922077]}

    
    plot_fill([results_bert_corrected_attn_mat],["bert"],"attention level","F1","Attention level analysis", "./bert_corrected_attn_mat.png")  
    
#    plot_fill([results_bert, results_flaubert],["bert","flaubert"],"attention level", "F1", "Attention level analysis (beta = 1)","./attn_level_analysis.png")
    
    '''
    
    ## beta study
    results_falubert_attn_0 = {0: [0.7012987012987012, 0.6926406926406925, 0.6883116883116882], 1: [0.6883116883116882, 0.7402597402597402, 0.7229437229437227], 2: [0.6233766233766233, 0.6450216450216449, 0.6017316017316017], 3: [0.5844155844155843, 0.593073593073593, 0.606060606060606], 4: [0.5497835497835497, 0.5584415584415583, 0.5627705627705627], 5: [0.4935064935064934, 0.45887445887445877, 0.47619047619047605], 6: [0.47186147186147176, 0.4805194805194804, 0.48484848484848475], 7: [0.21645021645021634, 0.225108225108225, 0.42857142857142844], 8: [0.22077922077922066, 0.2813852813852813, 0.225108225108225], 9: [0.2987012987012986, 0.2554112554112553, 0.25108225108225096], 10: [0.22077922077922066, 0.2683982683982683, 0.22077922077922066]}   
    
    results_attn_10 = {
        1.0: [0.6494,  0.6623,   0.697],
        2.0: [0.6623,  0.6407,   0.6363],
        3.0: [0.6753,  0.645,    0.6667],
        4.0: [0.6407,  0.645,    0.6494],
        5.0: [0.6407,  0.6883,   0.6667],
        6.0: [0.6667,  0.6623,   0.6494],
        7.0: [0.6667,  0.684,    0.6623],
        8.0: [0.6667,  0.6753,   0.6883],
        9.0: [0.6363,  0.658,    0.6537],
        10.0: [0.6234, 0.645,    0.6363] }

    results_attn_12 = {
        1.0: [0.6407,  0.6537,   0.6277],
        2.0: [0.6363,  0.6277,   0.645],
        3.0: [0.658,   0.645,    0.6407],
        4.0: [0.6883,  0.6537,   0.6623],
        5.0: [0.658,   0.6667,   0.6797],
        6.0: [0.6104,  0.6537,   0.6623],
        7.0: [0.671,   0.6537,   0.6623],
        8.0: [0.6407,  0.645,    0.6537],
        9.0: [0.6234,  0.6537,   0.6233],
        10.0:[0.6147,  0.6234,   0.645] }
    
    plot_fill([results_attn_10, results_attn_12], ["attn_10", "attn_12"], "beta", "F1", "beta factor analysis","./beta_factor_analysis.png")
    '''
    
    '''
    results = {'type_I': {'type_I': [0.1645021645021644, 0.1645021645021644, 0.1645021645021644], 'type_II': [0.1937499999999999, 0.1937499999999999, 0.1937499999999999], 'type_III': [0.18255208333333325, 0.18255208333333325, 0.18255208333333325]}, 'type_II': {'type_I': [0.24242424242424232, 0.24675324675324664, 0.24242424242424232], 'type_II': [0.24427083333333321, 0.24505208333333323, 0.24479166666666655], 'type_III': [0.24088541666666655, 0.24140624999999988, 0.24088541666666655]}, 'type_III': {'type_I': [0.21645021645021634, 0.21645021645021634, 0.22077922077922066], 'type_II': [0.2421874999999999, 0.24348958333333323, 0.24401041666666656], 'type_III': [0.23619791666666656, 0.23619791666666656, 0.23619791666666656]}}
    plot_X_test(results, "bert", "train on", "test on", "cross testing", "./results_X_testing.png")
    '''
    
    '''
    results_X_testing = {'type_I': {'type_I': [0.6753246753246752, 0.6709956709956709, 0.6926406926406925], 'type_II': [0.41041666666666654, 0.41041666666666654, 0.4127604166666666], 'type_III': [0.3328124999999999, 0.33046874999999987, 0.3312499999999999]}, 'type_II': {'type_I': [0.7316017316017314, 0.7186147186147185, 0.7489177489177488], 'type_II': [0.5778645833333332, 0.5809895833333332, 0.5874999999999999], 'type_III': [0.38697916666666654, 0.37343749999999987, 0.38697916666666654]}, 'type_III': {'type_I': [0.47186147186147176, 0.4935064935064934, 0.4805194805194804], 'type_II': [0.4049479166666666, 0.4130208333333332, 0.4148437499999999], 'type_III': [0.3966145833333332, 0.3888020833333332, 0.3960937499999999]}}

    results_X_testing_same_train = {'type_I': {'type_I': [0.6839826839826839, 0.6709956709956709, 0.6796536796536795], 'type_II': [0.41249999999999987, 0.4054687499999999, 0.41458333333333325], 'type_III': [0.3312499999999999, 0.3309895833333332, 0.3351562499999999]}, 'type_II': {'type_I': [0.42857142857142844, 0.4242424242424242, 0.4545454545454544], 'type_II': [0.3684895833333332, 0.3736979166666665, 0.3710937499999999], 'type_III': [0.30807291666666653, 0.3117187499999999, 0.3132812499999999]}, 'type_III': {'type_I': [0.36363636363636354, 0.36363636363636354, 0.36363636363636354], 'type_II': [0.3453124999999999, 0.3445312499999999, 0.34348958333333324], 'type_III': [0.3385416666666666, 0.33828124999999987, 0.34088541666666655]}}

    results_X_testing_same_train_flaubert = {'type_I': {'type_I': [0.7445887445887446, 0.7056277056277055, 0.6450216450216449], 'type_II': [0.6471354166666665, 0.6502604166666666, 0.6223958333333333], 'type_III': [0.3302083333333332, 0.30416666666666653, 0.30885416666666654]}, 'type_II': {'type_I': [0.7099567099567099, 0.6839826839826839, 0.7056277056277055], 'type_II': [0.6010416666666666, 0.5549479166666665, 0.5966145833333332], 'type_III': [0.28229166666666655, 0.2833333333333332, 0.2877604166666666]}, 'type_III': {'type_I': [0.22943722943722933, 0.22943722943722933, 0.22943722943722933], 'type_II': [0.2223958333333332, 0.22031249999999988, 0.22473958333333321], 'type_III': [0.21901041666666657, 0.2145833333333332, 0.21979166666666655]}}

    results_X_testing_full_train_flaubert = {'type_I': {'type_I': [0.7229437229437227, 0.6883116883116882, 0.7056277056277055], 'type_II': [0.6494791666666666, 0.6359374999999999, 0.6304687499999999], 'type_III': [0.32864583333333325, 0.3114583333333332, 0.30911458333333325]}, 'type_II': {'type_I': [0.9870129870129869, 0.9956709956709956, 1.0], 'type_II': [0.9356770833333332, 0.9416666666666665, 0.9388020833333333], 'type_III': [0.3932291666666666, 0.3945312499999999, 0.39895833333333325]}, 'type_III': {'type_I': [0.9480519480519479, 0.9307359307359306, 0.9523809523809522], 'type_II': [0.8489583333333333, 0.8361979166666665, 0.8458333333333332], 'type_III': [0.8046874999999999, 0.7986979166666666, 0.7976562499999997]}}

    results_sent_beta_analysis_flaubert = {0: [0.36796536796536783, 0.6147186147186146, 0.39826839826839816], 1: [0.3593073593073592, 0.515151515151515, 0.3290043290043289], 2: [0.7142857142857142, 0.35064935064935054, 0.4329004329004328], 3: [0.58008658008658, 0.5584415584415583, 0.5108225108225107], 4: [0.58008658008658, 0.5627705627705627, 0.567099567099567], 5: [0.4805194805194804, 0.3030303030303029, 0.5714285714285713], 6: [0.4545454545454544, 0.541125541125541, 0.5324675324675323], 7: [0.45887445887445877, 0.4502164502164501, 0.5324675324675323], 8: [0.44155844155844143, 0.4329004329004328, 0.3073593073593072], 9: [0.4632034632034631, 0.47186147186147176, 0.502164502164502], 10: [0.3073593073593072, 0.3203463203463202, 0.4155844155844155]}

    results_sent_beta_analysis_bert = {0: [0.42857142857142844, 0.9696969696969696, 0.9870129870129869], 1: [0.4458874458874458, 0.4502164502164501, 0.4458874458874458], 2: [0.4502164502164501, 0.4545454545454544, 0.4458874458874458], 3: [0.43722943722943713, 0.44155844155844143, 0.43722943722943713], 4: [0.4458874458874458, 0.43722943722943713, 0.44155844155844143], 5: [0.44155844155844143, 0.43722943722943713, 0.44155844155844143], 6: [0.4458874458874458, 0.4458874458874458, 0.4458874458874458], 7: [0.4502164502164501, 0.43722943722943713, 0.44155844155844143], 8: [0.4458874458874458, 0.43722943722943713, 0.43722943722943713], 9: [0.44155844155844143, 0.4458874458874458, 0.4458874458874458], 10: [0.43722943722943713, 0.4545454545454544, 0.43722943722943713]}

    results_sent_baseline_ffnn_bert = {'type_I': {'type_I': [0.9913419913419912, 0.9913419913419912, 0.9913419913419912], 'type_II': [0.6575520833333333, 0.6575520833333333, 0.6575520833333333], 'type_III': [0.5731770833333332, 0.5731770833333332, 0.5731770833333332]}, 'type_II': {'type_I': [0.9913419913419912, 0.9913419913419912, 0.9913419913419912], 'type_II': [0.9554687499999999, 0.9554687499999999, 0.9554687499999999], 'type_III': [0.7411458333333332, 0.7411458333333332, 0.7411458333333332]}, 'type_III': {'type_I': [0.9826839826839826, 0.9826839826839826, 0.9826839826839826], 'type_II': [0.9216145833333333, 0.9216145833333333, 0.9216145833333333], 'type_III': [0.9057291666666666, 0.9057291666666666, 0.9057291666666666]}}

    results_sent_baseline_ffnn_bert_same_train =  {'type_I': {'type_I': [0.9913419913419912, 0.9913419913419912, 0.9913419913419912], 'type_II': [0.6575520833333333, 0.6575520833333333, 0.6575520833333333], 'type_III': [0.5731770833333332, 0.5731770833333332, 0.5731770833333332]}, 'type_II': {'type_I': [0.6969696969696969, 0.6969696969696969, 0.6969696969696969], 'type_II': [0.5744791666666665, 0.5744791666666665, 0.5744791666666665], 'type_III': [0.5135416666666666, 0.5135416666666666, 0.5135416666666666]}, 'type_III': {'type_I': [0.47619047619047605, 0.47619047619047605, 0.47619047619047605], 'type_II': [0.46041666666666653, 0.46041666666666653, 0.46041666666666653], 'type_III': [0.4473958333333332, 0.4473958333333332, 0.4473958333333332]}}

    results_sent_baseline_cnn_bert = {'type_I': {'type_I': [1.0, 1.0, 1.0], 'type_II': [0.6476562499999999, 0.6572916666666666, 0.6442708333333332], 'type_III': [0.5049479166666666, 0.5031249999999999, 0.49583333333333324]}, 'type_II': {'type_I': [0.9913419913419912, 0.9913419913419912, 0.9913419913419912], 'type_II': [0.9333333333333332, 0.9388020833333333, 0.9364583333333332], 'type_III': [0.5789062499999998, 0.5914062499999999, 0.5916666666666666]}, 'type_III': {'type_I': [0.8138528138528137, 0.8008658008658007, 0.8138528138528137], 'type_II': [0.7117187499999998, 0.7182291666666666, 0.7132812499999998], 'type_III': [0.6328124999999999, 0.6388020833333332, 0.6403645833333332]}}

    results_sent_baseline_ffnn_flaubert = {'type_I': {'type_I': [0.593073593073593, 0.593073593073593, 0.593073593073593], 'type_II': [0.5432291666666665, 0.5432291666666665, 0.5432291666666665], 'type_III': [0.35911458333333324, 0.35911458333333324, 0.35911458333333324]}, 'type_II': {'type_I': [0.9220779220779219, 0.9220779220779219, 0.9220779220779219], 'type_II': [0.8432291666666666, 0.8432291666666666, 0.8432291666666666], 'type_III': [0.5257812499999999, 0.5257812499999999, 0.5257812499999999]}, 'type_III': {'type_I': [0.7792207792207791, 0.7792207792207791, 0.7792207792207791], 'type_II': [0.7236979166666666, 0.7236979166666666, 0.7236979166666666], 'type_III': [0.6919270833333332, 0.6919270833333332, 0.6919270833333332]}}

    results_sent_baseline_ffnn_flaubert_same_train = {'type_I': {'type_I': [0.593073593073593, 0.593073593073593, 0.593073593073593], 'type_II': [0.5432291666666665, 0.5432291666666665, 0.5432291666666665], 'type_III': [0.35911458333333324, 0.35911458333333324, 0.35911458333333324]}, 'type_II': {'type_I': [0.4458874458874458, 0.4458874458874458, 0.4458874458874458], 'type_II': [0.3739583333333332, 0.3739583333333332, 0.3739583333333332], 'type_III': [0.30260416666666656, 0.30260416666666656, 0.30260416666666656]}, 'type_III': {'type_I': [0.37662337662337647, 0.37662337662337647, 0.37662337662337647], 'type_II': [0.33255208333333325, 0.33255208333333325, 0.33255208333333325], 'type_III': [0.3085937499999999, 0.3085937499999999, 0.3085937499999999]}}

    results_sent_baseline_cnn_flaubert = {'type_I': {'type_I': [0.6233766233766233, 0.6839826839826839, 0.6709956709956709], 'type_II': [0.5502604166666666, 0.5486979166666666, 0.5101562499999999], 'type_III': [0.34401041666666654, 0.34010416666666654, 0.3140624999999999]}, 'type_II': {'type_I': [0.9177489177489176, 0.9047619047619047, 0.9220779220779219], 'type_II': [0.8489583333333333, 0.8346354166666665, 0.8713541666666664], 'type_III': [0.44348958333333327, 0.4361979166666666, 0.44895833333333324]}, 'type_III': {'type_I': [0.6103896103896103, 0.593073593073593, 0.5714285714285713], 'type_II': [0.5390624999999999, 0.5390624999999999, 0.5361979166666666], 'type_III': [0.46536458333333325, 0.47057291666666656, 0.4718749999999999]}}

    '''
    

    '''
    "latent length vs beta for the chosen attention level (10 (index 9) for BERT and 1 (index 0) for FlauBERT)"
    results_3d_bert = {0: {5: [0.6623376623376622, 0.6406926406926405, 0.6536796536796535], 10: [0.6493506493506492, 0.6666666666666665, 0.6796536796536795], 15: [0.7056277056277055, 0.6666666666666665, 0.6666666666666665], 20: [0.6450216450216449, 0.6666666666666665, 0.6926406926406925], 25: [0.6969696969696969, 0.7012987012987012, 0.7272727272727272]}, 1: {5: [0.6536796536796535, 0.6363636363636362, 0.6753246753246752], 10: [0.6450216450216449, 0.6709956709956709, 0.6666666666666665], 15: [0.6883116883116882, 0.6969696969696969, 0.6839826839826839], 20: [0.6666666666666665, 0.6666666666666665, 0.6536796536796535], 25: [0.6666666666666665, 0.6493506493506492, 0.6753246753246752]}, 2: {5: [0.6753246753246752, 0.6580086580086579, 0.6233766233766233], 10: [0.6753246753246752, 0.6623376623376622, 0.6796536796536795], 15: [0.6493506493506492, 0.6666666666666665, 0.6796536796536795], 20: [0.6580086580086579, 0.6277056277056275, 0.6536796536796535], 25: [0.6017316017316017, 0.6493506493506492, 0.6363636363636362]}, 3: {5: [0.6450216450216449, 0.6666666666666665, 0.6666666666666665], 10: [0.6623376623376622, 0.6363636363636362, 0.6666666666666665], 15: [0.6363636363636362, 0.6536796536796535, 0.6363636363636362], 20: [0.6450216450216449, 0.6623376623376622, 0.6363636363636362], 25: [0.619047619047619, 0.6493506493506492, 0.6666666666666665]}, 4: {5: [0.6666666666666665, 0.6709956709956709, 0.6753246753246752], 10: [0.6450216450216449, 0.6493506493506492, 0.6580086580086579], 15: [0.6277056277056275, 0.6363636363636362, 0.632034632034632], 20: [0.593073593073593, 0.6103896103896103, 0.6103896103896103], 25: [0.567099567099567, 0.6103896103896103, 0.5844155844155843]}, 5: {5: [0.6709956709956709, 0.6709956709956709, 0.6753246753246752], 10: [0.6623376623376622, 0.6233766233766233, 0.6233766233766233], 15: [0.6406926406926405, 0.6450216450216449, 0.6103896103896103], 20: [0.58008658008658, 0.606060606060606, 0.593073593073593], 25: [0.541125541125541, 0.5238095238095237, 0.5367965367965367]}, 6: {5: [0.6709956709956709, 0.6796536796536795, 0.6623376623376622], 10: [0.619047619047619, 0.632034632034632, 0.6147186147186146], 15: [0.554112554112554, 0.606060606060606, 0.5887445887445887], 20: [0.5627705627705627, 0.5497835497835497, 0.5454545454545453], 25: [0.4935064935064934, 0.515151515151515, 0.49783549783549774]}, 7: {5: [0.6969696969696969, 0.6709956709956709, 0.6580086580086579], 10: [0.606060606060606, 0.6017316017316017, 0.606060606060606], 15: [0.5844155844155843, 0.632034632034632, 0.593073593073593], 20: [0.5367965367965367, 0.528138528138528, 0.528138528138528], 25: [0.4935064935064934, 0.5064935064935063, 0.502164502164502]}, 8: {5: [0.6363636363636362, 0.6450216450216449, 0.6277056277056275], 10: [0.606060606060606, 0.5974025974025973, 0.6103896103896103], 15: [0.6147186147186146, 0.554112554112554, 0.6147186147186146], 20: [0.5194805194805193, 0.515151515151515, 0.5064935064935063], 25: [0.5064935064935063, 0.49783549783549774, 0.4675324675324674]}, 9: {5: [0.6406926406926405, 0.6493506493506492, 0.6580086580086579], 10: [0.5974025974025973, 0.606060606060606, 0.6103896103896103], 15: [0.5757575757575757, 0.554112554112554, 0.5757575757575757], 20: [0.5238095238095237, 0.5064935064935063, 0.502164502164502], 25: [0.47619047619047605, 0.48484848484848475, 0.48484848484848475]}, 10: {5: [0.6406926406926405, 0.632034632034632, 0.6406926406926405], 10: [0.567099567099567, 0.5844155844155843, 0.5974025974025973], 15: [0.58008658008658, 0.567099567099567, 0.554112554112554], 20: [0.515151515151515, 0.5238095238095237, 0.5064935064935063], 25: [0.4545454545454544, 0.45887445887445877, 0.4675324675324674]}}
    results_3d_bert_corrected_attn = {0: {5: [0.6450216450216449, 0.6580086580086579, 0.6926406926406925], 10: [0.7272727272727272, 0.7272727272727272, 0.7359307359307358], 15: [0.7402597402597402, 0.6969696969696969, 0.753246753246753], 20: [0.7705627705627704, 0.7619047619047618, 0.7792207792207791], 25: [0.7748917748917747, 0.7489177489177488, 0.7575757575757575]}, 1: {5: [0.6753246753246752, 0.6926406926406925, 0.7229437229437227], 10: [0.6406926406926405, 0.6233766233766233, 0.632034632034632], 15: [0.58008658008658, 0.6017316017316017, 0.5844155844155843], 20: [0.606060606060606, 0.5887445887445887, 0.606060606060606], 25: [0.5714285714285713, 0.5757575757575757, 0.5887445887445887]}, 2: {5: [0.6406926406926405, 0.6536796536796535, 0.6450216450216449], 10: [0.6103896103896103, 0.6017316017316017, 0.5974025974025973], 15: [0.5238095238095237, 0.554112554112554, 0.5844155844155843], 20: [0.502164502164502, 0.49783549783549774, 0.48917748917748904], 25: [0.4675324675324674, 0.48484848484848475, 0.4935064935064934]}, 3: {5: [0.6017316017316017, 0.619047619047619, 0.5887445887445887], 10: [0.528138528138528, 0.515151515151515, 0.515151515151515], 15: [0.4935064935064934, 0.48917748917748904, 0.4935064935064934], 20: [0.4805194805194804, 0.4675324675324674, 0.45887445887445877], 25: [0.39826839826839816, 0.3896103896103895, 0.41125541125541115]}, 4: {5: [0.6017316017316017, 0.619047619047619, 0.619047619047619], 10: [0.502164502164502, 0.4675324675324674, 0.5108225108225107], 15: [0.45887445887445877, 0.4199134199134198, 0.43722943722943713], 20: [0.4329004329004328, 0.4199134199134198, 0.43722943722943713], 25: [0.36363636363636354, 0.37229437229437223, 0.3896103896103895]}, 5: {5: [0.554112554112554, 0.5757575757575757, 0.606060606060606], 10: [0.48917748917748904, 0.5194805194805193, 0.5194805194805193], 15: [0.40259740259740245, 0.4069264069264068, 0.40259740259740245], 20: [0.36796536796536783, 0.3809523809523808, 0.36796536796536783], 25: [0.3203463203463202, 0.3333333333333332, 0.3593073593073592]}, 6: {5: [0.58008658008658, 0.5627705627705627, 0.5584415584415583], 10: [0.43722943722943713, 0.4545454545454544, 0.4632034632034631], 15: [0.3939393939393938, 0.39826839826839816, 0.3939393939393938], 20: [0.3463203463203462, 0.37662337662337647, 0.3549783549783549], 25: [0.3290043290043289, 0.32467532467532456, 0.3160173160173159]}, 7: {5: [0.528138528138528, 0.5194805194805193, 0.5324675324675323], 10: [0.4069264069264068, 0.4502164502164501, 0.4199134199134198], 15: [0.40259740259740245, 0.3896103896103895, 0.3896103896103895], 20: [0.35064935064935054, 0.35064935064935054, 0.3419913419913419], 25: [0.32467532467532456, 0.3073593073593072, 0.3419913419913419]}, 8: {5: [0.5108225108225107, 0.5108225108225107, 0.5367965367965367], 10: [0.3809523809523808, 0.3896103896103895, 0.39826839826839816], 15: [0.37662337662337647, 0.36796536796536783, 0.3896103896103895], 20: [0.3333333333333332, 0.3463203463203462, 0.3203463203463202], 25: [0.31168831168831157, 0.3160173160173159, 0.32467532467532456]}, 9: {5: [0.4675324675324674, 0.4805194805194804, 0.48917748917748904], 10: [0.3549783549783549, 0.36363636363636354, 0.37662337662337647], 15: [0.3333333333333332, 0.3203463203463202, 0.3290043290043289], 20: [0.31168831168831157, 0.3333333333333332, 0.32467532467532456], 25: [0.3203463203463202, 0.3203463203463202, 0.3030303030303029]}, 10: {5: [0.48917748917748904, 0.47619047619047605, 0.4805194805194804], 10: [0.3593073593073592, 0.36796536796536783, 0.3549783549783549], 15: [0.32467532467532456, 0.3160173160173159, 0.31168831168831157], 20: [0.31168831168831157, 0.3073593073593072, 0.3030303030303029], 25: [0.3073593073593072, 0.3073593073593072, 0.3203463203463202]}}

    results_3d_flaubert = {0: {5: [0.48484848484848475, 0.5194805194805193, 0.567099567099567], 10: [0.7922077922077921, 0.7878787878787877, 0.7359307359307358], 15: [0.7229437229437227, 0.7056277056277055, 0.6450216450216449], 20: [0.8484848484848485, 0.8311688311688311, 0.8398268398268397], 25: [0.8398268398268397, 0.87012987012987, 0.8484848484848485]}, 1: {5: [0.6796536796536795, 0.6709956709956709, 0.6666666666666665], 10: [0.6796536796536795, 0.6666666666666665, 0.6536796536796535], 15: [0.541125541125541, 0.541125541125541, 0.5454545454545453], 20: [0.32467532467532456, 0.3073593073593072, 0.515151515151515], 25: [0.5108225108225107, 0.4545454545454544, 0.4675324675324674]}, 2: {5: [0.4935064935064934, 0.6017316017316017, 0.6233766233766233], 10: [0.5454545454545453, 0.554112554112554, 0.5454545454545453], 15: [0.21645021645021634, 0.23809523809523797, 0.225108225108225], 20: [0.25108225108225096, 0.2554112554112553, 0.27705627705627695], 25: [0.32467532467532456, 0.3073593073593072, 0.225108225108225]}, 3: {5: [0.5497835497835497, 0.38528138528138517, 0.4545454545454544], 10: [0.44155844155844143, 0.2987012987012986, 0.24242424242424232], 15: [0.21645021645021634, 0.21212121212121204, 0.22943722943722933], 20: [0.225108225108225, 0.2077922077922077, 0.21645021645021634], 25: [0.23809523809523797, 0.23376623376623365, 0.23809523809523797]}, 4: {5: [0.4675324675324674, 0.4502164502164501, 0.4935064935064934], 10: [0.225108225108225, 0.22077922077922066, 0.21212121212121204], 15: [0.225108225108225, 0.225108225108225, 0.22077922077922066], 20: [0.21212121212121204, 0.2077922077922077, 0.225108225108225], 25: [0.25108225108225096, 0.225108225108225, 0.22943722943722933]}, 5: {5: [0.27705627705627695, 0.27705627705627695, 0.2683982683982683], 10: [0.21212121212121204, 0.23376623376623365, 0.225108225108225], 15: [0.22077922077922066, 0.21645021645021634, 0.21645021645021634], 20: [0.2077922077922077, 0.19913419913419902, 0.20346320346320335], 25: [0.21212121212121204, 0.21645021645021634, 0.22077922077922066]}, 6: {5: [0.2727272727272726, 0.26406926406926395, 0.2683982683982683], 10: [0.22077922077922066, 0.225108225108225, 0.22077922077922066], 15: [0.23376623376623365, 0.22943722943722933, 0.23376623376623365], 20: [0.19047619047619035, 0.1948051948051947, 0.20346320346320335], 25: [0.21212121212121204, 0.2077922077922077, 0.22077922077922066]}, 7: {5: [0.20346320346320335, 0.1948051948051947, 0.18614718614718606], 10: [0.21645021645021634, 0.225108225108225, 0.23809523809523797], 15: [0.21645021645021634, 0.22077922077922066, 0.2077922077922077], 20: [0.18614718614718606, 0.19047619047619035, 0.19913419913419902], 25: [0.21212121212121204, 0.19913419913419902, 0.21645021645021634]}, 8: {5: [0.19047619047619035, 0.19047619047619035, 0.19913419913419902], 10: [0.21645021645021634, 0.22077922077922066, 0.21645021645021634], 15: [0.1818181818181817, 0.20346320346320335, 0.19047619047619035], 20: [0.1774891774891774, 0.1774891774891774, 0.19047619047619035], 25: [0.2077922077922077, 0.2077922077922077, 0.2077922077922077]}, 9: {5: [0.1774891774891774, 0.1818181818181817, 0.18614718614718606], 10: [0.21645021645021634, 0.21645021645021634, 0.22077922077922066], 15: [0.19047619047619035, 0.1818181818181817, 0.1948051948051947], 20: [0.1818181818181817, 0.1948051948051947, 0.19047619047619035], 25: [0.2077922077922077, 0.1948051948051947, 0.20346320346320335]}, 10: {5: [0.1818181818181817, 0.1818181818181817, 0.17316017316017304], 10: [0.21645021645021634, 0.21212121212121204, 0.21645021645021634], 15: [0.19047619047619035, 0.19047619047619035, 0.19913419913419902], 20: [0.19047619047619035, 0.1818181818181817, 0.1948051948051947], 25: [0.1948051948051947, 0.1948051948051947, 0.19913419913419902]}}

    results_flaubert_attn_beta = {0: 
                                    {0: [0.7272727272727272, 0.7359307359307358, 0.7272727272727272], 
                                    1: [0.5887445887445887, 0.5844155844155843, 0.567099567099567], 
                                    2: [0.3939393939393938, 0.48917748917748904, 0.4675324675324674], 
                                    3: [0.3073593073593072, 0.2857142857142856, 0.3203463203463202], 
                                    4: [0.26406926406926395, 0.24242424242424232, 0.25108225108225096], 
                                    5: [0.24675324675324664, 0.25108225108225096, 0.24675324675324664], 
                                    6: [0.24675324675324664, 0.23376623376623365, 0.23809523809523797], 
                                    7: [0.24242424242424232, 0.23376623376623365, 0.24242424242424232], 
                                    8: [0.24242424242424232, 0.24242424242424232, 0.23809523809523797], 
                                    9: [0.225108225108225, 0.24242424242424232, 0.24242424242424232], 
                                    10: [0.23809523809523797, 0.24242424242424232, 0.23809523809523797]}, 
                                1: 
                                    {0: [0.7705627705627704, 0.7965367965367964, 0.7359307359307358], 
                                    1: [0.7272727272727272, 0.7012987012987012, 0.7186147186147185], 
                                    2: [0.632034632034632, 0.6147186147186146, 0.6233766233766233], 
                                    3: [0.5714285714285713, 0.5887445887445887, 0.58008658008658], 
                                    4: [0.32467532467532456, 0.3809523809523808, 0.3160173160173159], 
                                    5: [0.23376623376623365, 0.26406926406926395, 0.225108225108225], 
                                    6: [0.3896103896103895, 0.3809523809523808, 0.37662337662337647], 
                                    7: [0.3290043290043289, 0.37229437229437223, 0.3549783549783549], 
                                    8: [0.37662337662337647, 0.3549783549783549, 0.36796536796536783], 
                                    9: [0.2987012987012986, 0.3203463203463202, 0.3203463203463202], 
                                    10: [0.1471861471861471, 0.1471861471861471, 0.14285714285714274]}, 
                                2: {
                                    0: [0.805194805194805, 0.7965367965367964, 0.7878787878787877], 
                                    1: [0.7316017316017314, 0.7186147186147185, 0.7012987012987012], 
                                    2: [0.4805194805194804, 0.47619047619047605, 0.45887445887445877], 
                                    3: [0.36363636363636354, 0.36796536796536783, 0.3419913419913419], 
                                    4: [0.3073593073593072, 0.3030303030303029, 0.3160173160173159], 5: [0.225108225108225, 0.24675324675324664, 0.22943722943722933], 6: [0.21645021645021634, 0.21212121212121204, 0.22077922077922066], 7: [0.21645021645021634, 0.2077922077922077, 0.21645021645021634], 8: [0.20346320346320335, 0.19913419913419902, 0.20346320346320335], 9: [0.21212121212121204, 0.20346320346320335, 0.20346320346320335], 10: [0.2077922077922077, 0.21212121212121204, 0.21212121212121204]}, 3: {0: [0.5194805194805193, 0.528138528138528, 0.5194805194805193], 1: [0.4935064935064934, 0.47186147186147176, 0.47619047619047605], 2: [0.44155844155844143, 0.3939393939393938, 0.42857142857142844], 3: [0.37662337662337647, 0.36796536796536783, 0.40259740259740245], 4: [0.41125541125541115, 0.3809523809523808, 0.3896103896103895], 5: [0.3593073593073592, 0.36363636363636354, 0.3549783549783549], 6: [0.3333333333333332, 0.3290043290043289, 0.32467532467532456], 7: [0.29004329004328994, 0.2943722943722943, 0.29004329004328994], 8: [0.24675324675324664, 0.24242424242424232, 0.22077922077922066], 9: [0.2077922077922077, 0.2077922077922077, 0.22943722943722933], 10: [0.22077922077922066, 0.22943722943722933, 0.22077922077922066]}, 
                                4: {0: [0.5238095238095237, 0.528138528138528, 0.48484848484848475], 1: [0.4805194805194804, 0.5108225108225107, 0.44155844155844143], 2: [0.40259740259740245, 0.4155844155844155, 0.38528138528138517], 3: [0.33766233766233755, 0.33766233766233755, 0.35064935064935054], 4: [0.3073593073593072, 0.2987012987012986, 0.2987012987012986], 5: [0.3030303030303029, 0.2857142857142856, 0.29004329004328994], 6: [0.2857142857142856, 0.2857142857142856, 0.29004329004328994], 7: [0.2727272727272726, 0.27705627705627695, 0.2813852813852813], 8: [0.2727272727272726, 0.26406926406926395, 0.2683982683982683], 9: [0.27705627705627695, 0.2554112554112553, 0.2597402597402596], 10: [0.2554112554112553, 0.25108225108225096, 0.2683982683982683]}, 
                                5: {0: [0.6623376623376622, 0.58008658008658, 0.5844155844155843], 1: [0.5367965367965367, 0.5497835497835497, 0.554112554112554], 2: [0.4675324675324674, 0.4675324675324674, 0.47186147186147176], 3: [0.4155844155844155, 0.41125541125541115, 0.38528138528138517], 4: [0.3419913419913419, 0.36796536796536783, 0.36796536796536783], 5: [0.37662337662337647, 0.36363636363636354, 0.39826839826839816], 6: [0.36363636363636354, 0.3333333333333332, 0.33766233766233755], 7: [0.3073593073593072, 0.3030303030303029, 0.3160173160173159], 8: [0.31168831168831157, 0.31168831168831157, 0.3073593073593072], 9: [0.31168831168831157, 0.3073593073593072, 0.3030303030303029], 10: [0.3030303030303029, 0.2943722943722943, 0.2987012987012986]}, 
                                6: {0: [0.5064935064935063, 0.5064935064935063, 0.554112554112554], 1: [0.502164502164502, 0.5064935064935063, 0.49783549783549774], 2: [0.4069264069264068, 0.44155844155844143, 0.41125541125541115], 3: [0.4199134199134198, 0.4329004329004328, 0.4155844155844155], 4: [0.3939393939393938, 0.39826839826839816, 0.38528138528138517], 5: [0.3333333333333332, 0.31168831168831157, 0.3333333333333332], 6: [0.33766233766233755, 0.32467532467532456, 0.3203463203463202], 7: [0.31168831168831157, 0.3030303030303029, 0.32467532467532456], 8: [0.29004329004328994, 0.2987012987012986, 0.2943722943722943], 9: [0.2857142857142856, 0.2857142857142856, 0.3030303030303029], 10: [0.2943722943722943, 0.2987012987012986, 0.29004329004328994]}, 
                                7: {0: [0.42857142857142844, 0.4329004329004328, 0.4155844155844155], 1: [0.3160173160173159, 0.4155844155844155, 0.3290043290043289], 2: [0.37229437229437223, 0.3809523809523808, 0.3809523809523808], 3: [0.3939393939393938, 0.39826839826839816, 0.3896103896103895], 4: [0.3463203463203462, 0.37662337662337647, 0.37662337662337647], 5: [0.3419913419913419, 0.3290043290043289, 0.3549783549783549], 6: [0.3030303030303029, 0.32467532467532456, 0.3203463203463202], 7: [0.2857142857142856, 0.2727272727272726, 0.2987012987012986], 8: [0.2597402597402596, 0.27705627705627695, 0.2597402597402596], 9: [0.2813852813852813, 0.2683982683982683, 0.2813852813852813], 10: [0.2597402597402596, 0.2727272727272726, 0.2727272727272726]}, 
                                8: {0: [0.4502164502164501, 0.43722943722943713, 0.4458874458874458], 1: [0.502164502164502, 0.4805194805194804, 0.5497835497835497], 2: [0.4632034632034631, 0.4632034632034631, 0.4675324675324674], 3: [0.4458874458874458, 0.36363636363636354, 0.43722943722943713], 4: [0.3463203463203462, 0.41125541125541115, 0.3290043290043289], 5: [0.37229437229437223, 0.36363636363636354, 0.3333333333333332], 6: [0.3549783549783549, 0.3593073593073592, 0.33766233766233755], 7: [0.32467532467532456, 0.3160173160173159, 0.3290043290043289], 8: [0.3290043290043289, 0.3333333333333332, 0.3160173160173159], 9: [0.3203463203463202, 0.3160173160173159, 0.31168831168831157], 10: [0.2987012987012986, 0.3030303030303029, 0.31168831168831157]}, 
                                9: {0: [0.4502164502164501, 0.3809523809523808, 0.37229437229437223], 1: [0.3463203463203462, 0.3809523809523808, 0.32467532467532456], 2: [0.37229437229437223, 0.4199134199134198, 0.4199134199134198], 3: [0.4069264069264068, 0.39826839826839816, 0.37662337662337647], 4: [0.37229437229437223, 0.37662337662337647, 0.37229437229437223], 5: [0.3549783549783549, 0.3463203463203462, 0.3333333333333332], 6: [0.33766233766233755, 0.3419913419913419, 0.33766233766233755], 7: [0.32467532467532456, 0.36796536796536783, 0.3290043290043289], 8: [0.3593073593073592, 0.3593073593073592, 0.3333333333333332], 9: [0.3030303030303029, 0.31168831168831157, 0.3419913419913419], 10: [0.3290043290043289, 0.31168831168831157, 0.33766233766233755]}, 
                                10: {0: [0.42857142857142844, 0.39826839826839816, 0.44155844155844143], 1: [0.4155844155844155, 0.38528138528138517, 0.4329004329004328], 2: [0.3939393939393938, 0.39826839826839816, 0.40259740259740245], 3: [0.3549783549783549, 0.32467532467532456, 0.36796536796536783], 4: [0.3463203463203462, 0.33766233766233755, 0.3419913419913419], 5: [0.3290043290043289, 0.31168831168831157, 0.3073593073593072], 6: [0.3073593073593072, 0.2943722943722943, 0.2943722943722943], 7: [0.2987012987012986, 0.2987012987012986, 0.2987012987012986], 8: [0.3030303030303029, 0.31168831168831157, 0.31168831168831157], 9: [0.2987012987012986, 0.31168831168831157, 0.2987012987012986], 10: [0.2987012987012986, 0.3030303030303029, 0.3073593073593072]}, 11: {0: [0.43722943722943713, 0.42857142857142844, 0.43722943722943713], 1: [0.37229437229437223, 0.36363636363636354, 0.40259740259740245], 2: [0.3160173160173159, 0.3160173160173159, 0.38528138528138517], 3: [0.37229437229437223, 0.37662337662337647, 0.3896103896103895], 4: [0.38528138528138517, 0.3939393939393938, 0.3896103896103895], 5: [0.37662337662337647, 0.37229437229437223, 0.36363636363636354], 6: [0.32467532467532456, 0.33766233766233755, 0.3290043290043289], 7: [0.2857142857142856, 0.2987012987012986, 0.2857142857142856], 8: [0.3160173160173159, 0.3030303030303029, 0.3203463203463202], 9: [0.24675324675324664, 0.25108225108225096, 0.2554112554112553], 10: [0.26406926406926395, 0.2683982683982683, 0.25108225108225096]}}

    plot_3d(results_3d_bert, "bert", "beta", "latent", "F1", "latent and beta analyis", "tets_3d_plot.png")
    '''
    
    
    '''
    ## settings: sent latent = 16, seq_latent = 5, set kernel 10x10, seq kernel 3x15x15
    results_x_test_bert_sentEmbs_2levelVAE = {'type_I': {'type_I': [0.87012987012987, 0.8658008658008657, 0.8874458874458874], 'type_II': [0.6036458333333332, 0.5830729166666666, 0.5835937499999999], 'type_III': [0.5354166666666665, 0.4934895833333332, 0.4981770833333332]}, 'type_II': {'type_I': [0.9610389610389609, 0.9523809523809522, 0.9740259740259739], 'type_II': [0.8075520833333332, 0.7890624999999999, 0.8132812499999998], 'type_III': [0.6898437499999999, 0.6523437499999999, 0.6747395833333332]}, 'type_III': {'type_I': [0.9177489177489176, 0.9220779220779219, 0.8961038961038961], 'type_II': [0.7416666666666666, 0.7747395833333333, 0.7507812499999998], 'type_III': [0.7106770833333332, 0.7411458333333332, 0.7138020833333331]}}
    results_x_test_flaubert_sentEmbs_2levelVAE = {'type_I': {'type_I': [0.515151515151515, 0.5584415584415583, 0.4805194805194804], 'type_II': [0.4518229166666666, 0.46067708333333324, 0.4374999999999999], 'type_III': [0.31197916666666653, 0.31093749999999987, 0.31588541666666653]}, 'type_II': {'type_I': [0.7099567099567099, 0.6883116883116882, 0.7056277056277055], 'type_II': [0.6192708333333332, 0.6273437499999999, 0.6229166666666666], 'type_III': [0.41640624999999987, 0.4135416666666665, 0.40208333333333324]}, 'type_III': {'type_I': [0.58008658008658, 0.6277056277056275, 0.5974025974025973], 'type_II': [0.5427083333333332, 0.5385416666666666, 0.5440104166666666], 'type_III': [0.5192708333333332, 0.5138020833333332, 0.5161458333333332]}}

    results_x_test_bert_sentEmbs_2levelVAE_ffnn = {'type_I': {'type_I': [0.857142857142857, 0.8095238095238094, 0.8398268398268397], 'type_II': [0.5401041666666666, 0.5247395833333333, 0.5289062499999999], 'type_III': [0.47760416666666655, 0.4734374999999999, 0.47630208333333324]}, 'type_II': {'type_I': [0.8138528138528137, 0.8354978354978354, 0.7965367965367964], 'type_II': [0.6627604166666665, 0.6695312499999999, 0.6476562499999999], 'type_III': [0.5859374999999999, 0.5908854166666666, 0.5856770833333332]}, 'type_III': {'type_I': [0.45887445887445877, 0.4545454545454544, 0.45887445887445877], 'type_II': [0.44713541666666656, 0.4567708333333333, 0.44895833333333324], 'type_III': [0.44635416666666655, 0.4401041666666666, 0.44765624999999987]}}

    results_bert_2levelVAE_beta_seq_vs_beta_sent = 
                {1: 
                    {1: [0.8658008658008657, 0.9220779220779219, 0.9220779220779219], 
                    2: [0.8917748917748917, 0.9004329004329004, 0.883116883116883], 
                    3: [0.7489177489177488, 0.8181818181818181, 0.7316017316017314], 
                    4: [0.4155844155844155, 0.3939393939393938, 0.41125541125541115], 
                    5: [0.38528138528138517, 0.3809523809523808, 0.3939393939393938]}, 
                2: 
                    {1: [0.9480519480519479, 0.9523809523809522, 0.9437229437229436], 
                    2: [0.7922077922077921, 0.8528138528138527, 0.805194805194805], 
                    3: [0.7402597402597402, 0.3809523809523808, 0.4069264069264068], 
                    4: [0.40259740259740245, 0.38528138528138517, 0.4199134199134198], 
                    5: [0.3939393939393938, 0.3939393939393938, 0.3939393939393938]}, 
                3: 
                    {1: [0.9350649350649349, 0.9264069264069263, 0.9177489177489176], 
                    2: [0.9134199134199134, 0.9004329004329004, 0.9177489177489176], 
                    3: [0.5974025974025973, 0.7748917748917747, 0.4069264069264068], 
                    4: [0.4199134199134198, 0.39826839826839816, 0.4199134199134198], 
                    5: [0.41125541125541115, 0.40259740259740245, 0.3896103896103895]}, 
                    
                4: 
                    {1: [0.9264069264069263, 0.9437229437229436, 0.9264069264069263], 
                    2: [0.8658008658008657, 0.87012987012987, 0.857142857142857], 
                    3: [0.3896103896103895, 0.7445887445887446, 0.3939393939393938], 
                    4: [0.40259740259740245, 0.39826839826839816, 0.39826839826839816], 
                    5: [0.3939393939393938, 0.39826839826839816, 0.3809523809523808]}, 
                5: 
                    {1: [0.9393939393939393, 0.9307359307359306, 0.9220779220779219], 
                    2: [0.8398268398268397, 0.8917748917748917, 0.8658008658008657], 
                    3: [0.7099567099567099, 0.6450216450216449, 0.40259740259740245], 
                    4: [0.4329004329004328, 0.4199134199134198, 0.4242424242424242], 
                    5: [0.3939393939393938, 0.40259740259740245, 0.39826839826839816]}}


    results_x_test_bert_2levelVAE_beta_seq_2_beta_sent_1_epochs_100_40 = {'type_I': {'type_I': [0.7359307359307358, 0.7878787878787877, 0.9047619047619047], 'type_II': [0.5252604166666666, 0.5369791666666666, 0.6031249999999999], 'type_III': [0.4270833333333332, 0.4406249999999999, 0.5338541666666665]}, 'type_II': {'type_I': [0.9870129870129869, 0.9567099567099566, 0.9826839826839826], 'type_II': [0.8273437499999999, 0.8093749999999998, 0.8039062499999999], 'type_III': [0.7166666666666666, 0.6757812499999999, 0.6859374999999999]}, 'type_III': {'type_I': [0.7965367965367964, 0.9264069264069263, 0.4935064935064934], 'type_II': [0.6687499999999998, 0.7591145833333331, 0.47239583333333324], 'type_III': [0.6424479166666666, 0.7270833333333332, 0.45494791666666656]}}
    results_x_test_bert_2levelVAE_beta_seq_2_beta_sent_1_epochs_120_60_sameTrain = {'type_I': {'type_I': [0.9307359307359306, 0.9307359307359306, 0.8225108225108224], 'type_II': [0.5851562499999999, 0.5752604166666666, 0.5119791666666665], 'type_III': [0.49583333333333324, 0.4833333333333332, 0.41458333333333325]}, 'type_II': {'type_I': [0.5324675324675323, 0.43722943722943713, 0.4458874458874458], 'type_II': [0.5023437499999999, 0.46197916666666655, 0.4679687499999999], 'type_III': [0.46770833333333317, 0.4505208333333332, 0.45026041666666655]}, 'type_III': {'type_I': [0.47186147186147176, 0.4675324675324674, 0.4545454545454544], 'type_II': [0.45260416666666653, 0.46067708333333324, 0.46119791666666654], 'type_III': [0.4406249999999999, 0.43463541666666655, 0.4403645833333332]}}

    results_5x_test_2level = {'type_I': {'type_I': [0.4069264069264068, 0.909090909090909, 0.9350649350649349, 0.9220779220779219, 0.9523809523809522], 'type_II': [0.4361979166666666, 0.6281249999999999, 0.6104166666666666, 0.6218749999999998, 0.6164062499999999], 'type_III': [0.4270833333333332, 0.5557291666666666, 0.5442708333333333, 0.5567708333333332, 0.5374999999999999]}, 'type_II': {'type_I': [0.9913419913419912, 0.9826839826839826, 0.9870129870129869, 0.9826839826839826, 0.9870129870129869], 'type_II': [0.8916666666666666, 0.8820312499999999, 0.8736979166666665, 0.8841145833333333, 0.8773437499999999], 'type_III': [0.6973958333333332, 0.7223958333333332, 0.6911458333333332, 0.7229166666666665, 0.7221354166666667]}, 'type_III': {'type_I': [0.9610389610389609, 0.9610389610389609, 0.9653679653679652, 0.9523809523809522, 0.9437229437229436], 'type_II': [0.8171874999999997, 0.8143229166666666, 0.8041666666666666, 0.8104166666666666, 0.7984374999999999], 'type_III': [0.7815104166666665, 0.7903645833333333, 0.7749999999999999, 0.7794270833333332, 0.7671874999999998]}}
    results_5x_test_2level_sameTrain = {'type_I': {'type_I': [0.3809523809523808, 0.9437229437229436, 0.9523809523809522, 0.9567099567099566, 0.9696969696969696], 'type_II': [0.4343749999999999, 0.6117187499999999, 0.6330729166666665, 0.6135416666666665, 0.6140624999999998], 'type_III': [0.4192708333333332, 0.5388020833333332, 0.5585937499999999, 0.5239583333333332, 0.5416666666666665]}, 'type_II': {'type_I': [0.45887445887445877, 0.44155844155844143, 0.49783549783549774, 0.44155844155844143, 0.42857142857142844], 'type_II': [0.4479166666666666, 0.4468749999999999, 0.4648437499999999, 0.4473958333333332, 0.4468749999999999], 'type_III': [0.4523437499999999, 0.45416666666666655, 0.4638020833333332, 0.45885416666666656, 0.4546874999999999]}, 'type_III': {'type_I': [0.4675324675324674, 0.45887445887445877, 0.48484848484848475, 0.4805194805194804, 0.47186147186147176], 'type_II': [0.4453124999999999, 0.45260416666666653, 0.44947916666666654, 0.4518229166666666, 0.4523437499999999], 'type_III': [0.4440104166666665, 0.4445312499999999, 0.44166666666666654, 0.4442708333333332, 0.44374999999999987]}}


    ## settings: sent latent = 15, seq_latent = 5, set kernel 10x10, seq kernel 3x15x15
    results_x_test_bert_sentEmbs_2levelVAE_sentLat15 = {'type_I': {'type_I': [0.9177489177489176, 0.8658008658008657, 0.9350649350649349], 'type_II': [0.6093749999999999, 0.6026041666666666, 0.6130208333333332], 'type_III': [0.5445312499999999, 0.5312499999999999, 0.5445312499999999]}, 'type_II': {'type_I': [0.9307359307359306, 0.9393939393939393, 0.9653679653679652], 'type_II': [0.7843749999999999, 0.8111979166666665, 0.8018229166666666], 'type_III': [0.6567708333333332, 0.7208333333333332, 0.6859374999999999]}, 'type_III': {'type_I': [0.6839826839826839, 0.7922077922077921, 0.4675324675324674], 'type_II': [0.6088541666666666, 0.6898437499999999, 0.48281249999999987], 'type_III': [0.5895833333333332, 0.6638020833333332, 0.46197916666666655]}}

    '''
    
    results_ffnn = {'type_I': {'type_I': [0.9870129870129869, 0.9870129870129869, 0.9870129870129869, 0.9870129870129869, 0.9870129870129869], 'type_II': [0.6481770833333332, 0.6481770833333332, 0.6481770833333332, 0.6481770833333332, 0.6481770833333332], 'type_III': [0.5643229166666666, 0.5643229166666666, 0.5643229166666666, 0.5643229166666666, 0.5643229166666666]}, 'type_II': {'type_I': [0.58008658008658, 0.58008658008658, 0.58008658008658, 0.58008658008658, 0.58008658008658], 'type_II': [0.5335937499999999, 0.5335937499999999, 0.5335937499999999, 0.5335937499999999, 0.5335937499999999], 'type_III': [0.4973958333333332, 0.4973958333333332, 0.4973958333333332, 0.4973958333333332, 0.4973958333333332]}, 'type_III': {'type_I': [0.48917748917748904, 0.48917748917748904, 0.48917748917748904, 0.48917748917748904, 0.48917748917748904], 'type_II': [0.45416666666666655, 0.45416666666666655, 0.45416666666666655, 0.45416666666666655, 0.45416666666666655], 'type_III': [0.44192708333333325, 0.44192708333333325, 0.44192708333333325, 0.44192708333333325, 0.44192708333333325]}}
    plot_X_test(results_ffnn, "FFNN", "train on", "test on", "", "bert_baseline_ffnn_2073.png")
    
    
if __name__ == '__main__':
    main()